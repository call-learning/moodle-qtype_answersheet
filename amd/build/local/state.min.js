define("qtype_answersheet/local/state",["exports"],(function(_exports){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.default=void 0;var _default=new
/**
   * A reactive state class that stores the data for the competvet module.
   *
   * @module     qtype_answersheet/local/state
   * @copyright  2024 Bas Brands <bas@sonsbeekmedia.nl>
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */
class{constructor(){this.data={},this.subscribers=[]}async setValue(key,value){return new Promise((resolve=>{this.data[key]=value,this.notifySubscriber(key),this.debug(),resolve()}))}getValue(key){return this.data[key]}getData(){return this.data}subscribe(key,callback){if("string"!=typeof key)throw new Error("The key must be a string");if("function"!=typeof callback)throw new Error("The callback must be a function");this.subscribers.find((subscriber=>subscriber.key===key&&subscriber.callback===callback))?window.console.log("The key is already subscribed"):this.subscribers.push({key:key,callback:callback})}unsubscribe(callback){this.subscribers=this.subscribers.filter((subscriber=>subscriber.callback!==callback))}notifySubscribers(){this.subscribers.forEach((subscriber=>{void 0!==this.data[subscriber.key]&&subscriber.callback(this.data)}))}notifySubscriber(key){const subscriber=this.subscribers.find((subscriber=>subscriber.key===key));subscriber?subscriber.callback(this.data):window.console.log("The key ".concat(key," is not subscribed"))}debug(){const debugRegion=document.getElementById("debug");debugRegion&&(debugRegion.innerHTML=JSON.stringify(this.data,null,2))}};return _exports.default=_default,_exports.default}));

//# sourceMappingURL=state.min.js.map