define("qtype_answersheet/local/manager",["exports","qtype_answersheet/local/state","qtype_answersheet/local/repository","core/notification","core/str","./components/table"],(function(_exports,_state,_repository,_notification,_str,_table){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.default=void 0,_state=_interopRequireDefault(_state),_repository=_interopRequireDefault(_repository),_notification=_interopRequireDefault(_notification);class Manager{constructor(element,questionid){_defineProperty(this,"rowNumber",0),_defineProperty(this,"questionid",void 0),_defineProperty(this,"temprowid",1e3),_defineProperty(this,"element",void 0),_defineProperty(this,"table","qtype_answersheet"),_defineProperty(this,"columns",[]),_defineProperty(this,"TYPES",{1:"radiochecked",2:"letterbyletter",3:"freetext"}),this.element=element,this.questionid=parseInt(questionid),this.addEventListeners(),this.getDatagrid(),this.tempfield=document.querySelector('input[name="jsonquestions"]')}addEventListeners(){const form=document.querySelector('[data-region="app"]');form.addEventListener("click",(e=>{let btn=e.target.closest("[data-action]");btn&&(e.preventDefault(),this.actions(btn))})),form.addEventListener("change",(e=>{const input=e.target.closest("[data-input]");input&&this.change(input);const modulename=e.target.closest('[data-region="modulename"]');modulename&&this.changeModule(modulename);const moduletype=e.target.closest('[data-region="moduletype"]');moduletype&&this.changeModule(moduletype);const questionpoints=e.target.closest('[data-region="questionpoints"]');questionpoints&&this.changeModule(questionpoints),this.setTableData()})),form.addEventListener("keydown",(e=>{"ArrowDown"!==e.key&&"ArrowUp"!==e.key||(this.navigate(e),e.preventDefault()),"Enter"===e.key&&e.preventDefault()})),form.addEventListener("submit",(e=>{e.preventDefault()}))}async getDatagrid(){await this.getTableData(),await this.getTableConfig()}async getTableConfig(){const response=await _repository.default.getColumns({table:this.table});await _state.default.setValue("columns",response.columns)}async getTableData(){try{const response=await _repository.default.getData({questionid:this.questionid}),modules=await this.parseModules(response.modules);_state.default.setValue("modules",modules),this.setTableData()}catch(error){_notification.default.exception(error)}}async parseModules(modules){for(const mod of modules){const type=this.TYPES[mod.type];mod[type]=!0,mod.indicator=await this.getIndicator(mod.numoptions,mod.type),mod.rows.forEach((row=>{let selectedValue="";row.cells.forEach((cell=>{"answer"===cell.column&&(selectedValue=cell.value)})),row.cells=row.cells.map((cell=>{const column=mod.columns.find((column=>column.column===cell.column));return"select"===(cell=Object.assign({},cell,column)).type&&(cell.options=cell.options.map((option=>{const clonedOption=Object.assign({},option);return clonedOption.name===selectedValue&&(clonedOption.selected=!0),clonedOption}))),cell.edit=!0,cell}))}))}return modules=await this.recomputeIds(modules)}getRowObject(){return{rows:{id:"id",sortorder:"sortorder",cells:{type:"type",column:"column",value:"value"}}}}checkCellValue(cell){null!==cell.value&&"text"===cell.type&&cell.value.length>cell.length&&(cell.value=cell.value.substring(0,cell.length))}cleanModules(modules){const cleanedModules=[];return modules.forEach((module=>{const rows=module.rows,rowObject=this.getRowObject(),cleanedRows=rows.map((row=>{const cleanedRow={};return Object.keys(rowObject.rows).forEach((key=>{cleanedRow[key]=row[key]})),cleanedRow.cells=row.cells.map((cell=>{const cleanedCell={};return this.checkCellValue(cell),Object.keys(rowObject.rows.cells).forEach((key=>{var _cell$options;(cleanedCell[key]=cell[key],"options"===cell.column&&"value"===key)&&(cleanedCell[key]=null===(_cell$options=cell.options)||void 0===_cell$options?void 0:_cell$options.map((option=>option.name)))})),cleanedCell})),cleanedRow})),cleanedModule={};cleanedModule.sortorder=module.modulesortorder,cleanedModule.name=module.modulename,cleanedModule.type=module.type,cleanedModule.numoptions=module.numoptions,cleanedModule.rows=cleanedRows,cleanedModule.questionpoints=module.questionpoints,cleanedModules.push(cleanedModule)})),cleanedModules}async setTableData(){const modules=_state.default.getValue("modules"),cleanedModules=this.cleanModules(modules);this.tempfield.value=JSON.stringify(cleanedModules)}actions(btn){"addrow"===btn.dataset.action&&this.addRow(btn),"deleterow"===btn.dataset.action&&this.deleteRow(btn),"addmodule"===btn.dataset.action&&this.addModule(btn),"deletemodule"===btn.dataset.action&&this.deleteModule(btn),"moduleremoveoption"===btn.dataset.action&&this.updateModuleOption(btn,!1),"moduleaddoption"===btn.dataset.action&&this.updateModuleOption(btn,!0),this.setTableData()}async addRow(btn){const modules=_state.default.getValue("modules"),moduleid=btn.closest('[data-region="module"]').dataset.id,rows=modules.find((m=>m.id==moduleid)).rows,row=await this.createRow(rows.length+1);row&&(rows.push(row),_state.default.setValue("modules",modules),this.resetRowSortorder())}async recomputeIds(modules){for(const[moduleIndex,mod]of modules.entries())mod.modid="id_module_".concat(moduleIndex),mod.rows.forEach(((row,rowIndex)=>{row.rowid="id_row_".concat(moduleIndex,"_").concat(rowIndex),row.cells=row.cells.map((cell=>(cell.cellid="id_".concat(cell.column,"_").concat(moduleIndex,"_").concat(rowIndex),cell)))}));return modules}async createRow(sortorder){let rowid=this.createTempId(this.temprowid++);return new Promise((resolve=>{const row={};row.id=rowid,row.numoptions=4,row.sortorder=sortorder,row.type=1,row.radiochecked=!0;const columns=_state.default.getValue("columns");void 0!==columns?(row.cells=columns.map((column=>structuredClone(column))),row.cells.forEach((cell=>{cell.edit=!0,cell.value="",cell[cell.type]=!0})),resolve(row)):resolve()}))}async deleteRow(btn){const modules=_state.default.getValue("modules"),rowid=btn.closest("[data-row]").dataset.id,moduleid=btn.closest('[data-region="module"]').dataset.id,module=modules.find((m=>m.id==moduleid));if(module.rows.length>1){const index=module.rows.findIndex((r=>r.id==rowid));module.rows.splice(index,1),this.resetRowSortorder(),_state.default.setValue("modules",modules)}return new Promise((resolve=>{resolve(rowid)}))}change(input){const row=input.closest("[data-row]"),cell=input.closest("[data-cell]"),value=input.value,columnid=cell.dataset.columnid,rowid=row.dataset.id;_state.default.getValue("modules").forEach((module=>{const rowIndex=module.rows.findIndex((r=>r.id==rowid));if(-1===rowIndex)return;const cellIndexOption=module.rows[rowIndex].cells.findIndex((c=>c.columnid==columnid));module.rows[rowIndex].cells[cellIndexOption].value=value,"select"===module.rows[rowIndex].cells[cellIndexOption].type&&module.rows[rowIndex].cells[cellIndexOption].options.forEach((option=>{option.selected=option.name===value}));const cellIndexAnswer=module.rows[rowIndex].cells.findIndex((c=>"answer"==c.column));module.rows[rowIndex].cells[cellIndexAnswer].value=value}))}changeModule(element){const moduleElement=element.closest('[data-region="module"]'),moduleid=moduleElement.dataset.id,name=moduleElement.querySelector('[data-region="modulename"]').value,type=moduleElement.querySelector('[data-region="moduletype"]').value,numoptions=moduleElement.querySelector('[data-region="numoptions"]').value,questionpoints=moduleElement.querySelector('[data-region="questionpoints"]').value;Object.values(this.TYPES).forEach((type=>{moduleElement.classList.remove(type)})),moduleElement.classList.add(this.TYPES[type]);_state.default.getValue("modules").forEach((moduleObject=>{moduleObject.id==moduleid&&(moduleObject.modulename=name,moduleObject.type=parseInt(type),moduleObject.class=this.TYPES[type],moduleObject.numoptions=parseInt(numoptions),moduleObject.questionpoints=parseInt(questionpoints),Object.values(this.TYPES).forEach((type=>{moduleObject[type]=!1})),moduleObject[this.TYPES[type]]=!0)})),this.updateRangeIndicator(moduleElement)}updateModuleOption(btn,add){const numoptions=btn.closest('[data-region="module"]').querySelector('[data-region="numoptions"]'),value=parseInt(numoptions.value);numoptions.value=add?value+1:value-1,this.changeModule(numoptions)}async updateRangeIndicator(moduleElement){const type=moduleElement.querySelector('[data-region="moduletype"]').value,numoptions=moduleElement.querySelector('[data-region="numoptions"]').value;moduleElement.querySelector('[data-region="indicator"]').textContent=await this.getIndicator(numoptions,type)}async getIndicator(numoptions,type){const stringname="indicator:"+this.TYPES[type],stringtemplate={options:numoptions,lastletter:String.fromCharCode(65+parseInt(numoptions)-1)};return await(0,_str.get_string)(stringname,"qtype_answersheet",stringtemplate)}async deleteModule(btn){const modules=_state.default.getValue("modules"),moduleid=btn.closest('[data-region="module"]').dataset.id,module=modules.find((m=>m.id==moduleid));return new Promise((resolve=>{const index=modules.indexOf(module);modules.splice(index,1),_state.default.setValue("modules",modules),resolve(moduleid)}))}async addModule(){const modules=_state.default.getValue("modules"),module={id:this.createTempId(modules.length+1),modulesortorder:modules.length+1,modulename:" ",type:1,numoptions:4,questionpoints:1,indicator:this.getIndicator(4,1),rows:[await this.createRow(1)]};module[this.TYPES[1]]=!0,modules.push(module),await _state.default.setValue("modules",modules)}createTempId(numericId){return"tmp-".concat(numericId)}resetRowSortorder(){const modules=_state.default.getValue("modules");modules.forEach((module=>{module.rows.forEach(((row,index)=>{row.sortorder=index+1}))})),_state.default.setValue("modules",modules)}navigate(e){const currentIndex=e.target.closest("[data-row]").dataset.index,currentColumn=e.target.closest("[data-cell]").dataset.columnid,allRows=document.querySelectorAll("[data-row]");for(let i=0;i<allRows.length;i++)if(allRows[i].dataset.index==currentIndex){if("ArrowDown"===e.key&&i<allRows.length-1){const nextInput=allRows[i+1].querySelector('[data-columnid="'.concat(currentColumn,'"] input'));nextInput&&nextInput.focus()}if("ArrowUp"===e.key&&i>0){const previousInput=allRows[i-1].querySelector('[data-columnid="'.concat(currentColumn,'"] input'));previousInput&&previousInput.focus()}}if("ArrowRight"===e.key){const nextColumn=e.target.closest("[data-cell]").nextElementSibling;nextColumn&&nextColumn.focus()}if("ArrowLeft"===e.key){const previousColumn=e.target.closest("[data-cell]").previousElementSibling;previousColumn&&previousColumn.focus()}}}var _default={init:(element,questionid)=>{new Manager(element,questionid)}};return _exports.default=_default,_exports.default}));

//# sourceMappingURL=manager.min.js.map